Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"
  config.vm.network "public_network", auto_config: false, bridge: "en1: Wi-Fi (AirPort)"
  config.vm.provision "shell", inline: <<-SHELL
    #install base soft
    mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
    cp /vagrant/CentOS7-Base-163.repo /etc/yum.repos.d/CentOS-Base.repo
    yum clean all
    yum makecache
    #install jdk
    echo "192.168.31.185 soft.home" >> /etc/hosts
    mkdir /root/soft
    wget -O /root/soft/jdk-8u144-linux-x64.rpm http://soft.home/jdk-8u144-linux-x64.rpm
    rpm -ivh /root/soft/jdk-8u144-linux-x64.rpm
    JAVA_HOME=/usr/java/jdk1.8.0_144
    PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/lib 
    CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
    export JAVA_HOME PATH CLASSPATH
    echo "JAVA_HOME=/usr/java/jdk1.8.0_144" >> /root/.bash_profile
    echo "PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/lib " >> /root/.bash_profile
    echo "CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar" >> /root/.bash_profile
    echo "export JAVA_HOME PATH CLASSPATH" >> /root/.bash_profile
    echo "alias vim=vi" >> /root/.bash_profile
    #stop SELinux
    setenforce 0 
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
    #config sshd
    echo "RSAAuthentication yes" >>/etc/ssh/sshd_config
    echo "PubkeyAuthentication yes" >>/etc/ssh/sshd_config
    sed -i 's/PasswordAuthentication\ no/PasswordAuthentication\ yes/' /etc/ssh/sshd_config
    /bin/systemctl restart  sshd.service
    mkdir -p /root/.ssh
    touch /root/.ssh/authorized_keys
    chmod 700 -R /root/.ssh
    chmod 600 /root/.ssh/authorized_keys
    ssh-keygen -t rsa -P "" -f /root/.ssh/id_rsa
    cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys 

  #  echo '192.168.31.130 hadoop_master' >> /etc/hosts 
  #  echo '192.168.31.131 hadoop_node1' >> /etc/hosts 
  #  echo '192.168.31.132 hadoop_node2' >> /etc/hosts  

  SHELL

  config.vm.define "hadoop_master" do |hadoop_master|
    #download hadoop
    hadoop_master.vm.provision "shell",inline:<<-SHELL
      mkdir -p /home/hadoop/tmp
      mkdir -p /home/hadoop/hdfs/data
      mkdir -p /home/hadoop/hdfs/name
      cd /home/hadoop
      wget http://soft.home/hadoop-2.8.1.tar.gz
      tar zvxf hadoop-2.8.1.tar.gz
      cd /home/hadoop/hadoop-2.8.1/etc/hadoop
      sed -i 's/export JAVA_HOME=${JAVA_HOME}/export JAVA_HOME=\/usr\/java\/jdk1.8.0_144/' hadoop-env.sh
      mv core-site.xml core-site.xml.bak
      mv hdfs-site.xml hdfs-site.xml.bak
      mv slaves slaves.bak
      cp /vagrant/slaves .
      cp /vagrant/*.xml . 
      systemctl stop firewalld.service
   #   hostnamectl set-hostname hadoop_master
    SHELL

    #config network
    hadoop_master.vm.provision "shell",run: "always",inline:<<-SHELL
      ifconfig eth1 192.168.31.130 netmask 255.255.255.0 up
    SHELL
  end

  config.vm.define "hadoop_node1" do |hadoop_node1|
    hadoop_node1.vm.provision "shell",inline:<<-SHELL
    #  hostnamectl set-hostname hadoop_node1
    SHELL
    hadoop_node1.vm.provision "shell",run: "always",inline:<<-SHELL
      ifconfig eth1 192.168.31.131 netmask 255.255.255.0 up
    SHELL
  end

#  config.vm.define "hadoop_node2" do |hadoop_node2|
#    hadoop_node2.vm.provision "shell",inline:<<-SHELL
#     # hostnamectl set-hostname hadoop_node2
#    SHELL
#    hadoop_node2.vm.provision "shell",run: "always",inline:<<-SHELL
#      ifconfig eth1 192.168.31.132 netmask 255.255.255.0 up
#    SHELL
#  end
end
